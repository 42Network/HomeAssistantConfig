esphome:
  name: lcdtest
  platform: ESP8266
  board: d1_mini_pro

wifi:
  ssid: "EICS"
  password: "VeggieTales42"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Lcdtest Fallback Hotspot"
    password: "7JioHSYIH3NS"


i2c:
  - sda: GPIO4
    scl: GPIO5
    id: bus_a

time:
  - platform: homeassistant
    id: esptime

sensor:
  - platform: homeassistant
    id: inside_temperature
    entity_id: sensor.netatmo_rushcreek_downstairs_temperature
    internal: true

  - platform: homeassistant
    id: house_power
    entity_id: sensor.main_watts
    internal: true

switch: # controls the LED on the nodemcu8266 (to find it)
  - platform: gpio
    name: "LCD Test LED"
    id: my_led
    pin:
      number: D4
      inverted: yes

font:
  - file: 'slkscr.ttf'
    id: font1
    size: 8

  - file: 'BebasNeue-Regular.ttf'
    id: font2
    size: 48

  - file: 'arial.ttf'
    id: font3
    size: 14
    
display:
  - platform: ssd1306_i2c
    model: "SSD1306 128x64"
    address: 0x3D
    lambda: |-
      // Print "Mitt Smarta Hus" in top center.
      it.printf(64, 0, id(font1), TextAlign::TOP_CENTER, "Nathan Smart House");

      // Print time in HH:MM format
      it.strftime(0, 60, id(font2), TextAlign::BASELINE_LEFT, "%H:%M", id(esptime).now());

      // Print inside temperature (from homeassistant sensor)
      if (id(inside_temperature).has_state()) {
        it.printf(127, 23, id(font3), TextAlign::TOP_RIGHT , "%.1f°", id(inside_temperature).state);
      }

      // Print outside temperature (from homeassistant sensor)
      if (id(house_power).has_state()) {
        it.printf(127, 60, id(font3), TextAlign::BASELINE_RIGHT , "%d°", id(house_power).state);
      }
   
web_server:
  port: 80

captive_portal:

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:

